# (PART) Design Choices {-}

# Elements of Design


```{r, include = FALSE}
source("_packages_used.R")
```


***

A fully specified causal model includes the information needed to assess the properties of a research design that seeks to learn from or learn about the model. We talk through how to go from defining causal models to "declaring" research designs and use this framework in later chapters to inform decisions about details of design choices.  

***

So far we have described a way to think about causal models, a way to specify causal estimands, and a Bayesian approach to inference, given models and estimands. Together with a strategy for data gathering these elements are enough to fully characterize a research design. If in addition we provide criteria for evaluating a design we have enough to be able to simulate the behavior of a research design and assess whether a design is up to the task fo answering the questions we want to answer. 

Once we have a  method to assess the performance of a given design we can can start asking what kind of design is optimal, given some beliefs about the world (see @blair2016declaring for more on this general approach to design declaration and diagnosis). In the next chapters we use this approach to assess a set of design choices including choices regarding the clues about which data is sought, the types of cases for which data is sought, and the number of cases for which different types of data is sought.  

In the remainder of this chapter we discuss a simple evaluative criterion for a design and give examples for design declaration for a simple single case process tracing design and a mixed methods design.



## Model, inquiry, data strategy, answer strategy

We use the MIDA approach (model, inquiry, data strategy, answer strategy) approach to declare a simple process tracing design with an arbitrary model.


*  **Model.** We will define a model as introduced in Chapter 2. We outline approaches for this in section X below. 

* **Inquiry** As discussed in Chapter 4, an inquiry is a question asked of a model. This is typically a question about the distribution of a variable in some controlled or natural condition, or some summary of such distributions. We refer to the quantity being targeted by a query as the estimand.

* **Data strategy.** The data strategy describes how data will be gathered. In typical  `DeclareDesign` applications this includes both randomization and data gathering (sampling) strategies. We focus on data gathering (though unrestricted randomization schemes are easily accommodated in the workhorse model).   A sampling strategy might indicate a sequence of conditional data gathering schemes, for instance: gather data on $X$ and $Y$ for 100 cases, then gather data on $M$ for all cases in which $X=Y$.
Note that in some cases we might want to think of the estimand as being defined *after* the data strategy. This would be the case for instance if we chose a case and we seek to work out some feature *about that case* rather than about the population.

* **Answer strategy**. The answer strategy combines the observed data with a causal model to generate an updated model from which inferences can be drawn. Importantly, the model used in the answer strategy does not need to be the same model as assumed at the model step since we could imagine analysts coming to the data with quite different models in mind. Of course any model used in the answer strategy should generally involve the same variables as in the model itself.

A design is a concatenation of these four steps. 

The concatenated lets us examine instances of the application of a design. A single instance would involve 

1. a single draw of a true parameter vector from the distribution given in the model definition
2. a calculation of the value of an estimand given this true parameter draw
3. the generation of a dataset given the model implied by step 1 and the data strategy
4. the generation of an answer to the inquiry generated from the realized data from 3. and the answer strategy

With the observation of multiple instances we get to assess the distribution of our answers --- and our uncertainty around these -- over repeated draws, and each time we get to see how well the answer we get maps onto the assumed truth in that draw.




### Defining a model

For this we need to define our model.  In doing so we declare the set of variables we are interested in and the relations of independence between them. In defining the variables we generally also define the ranges of the  variables---indicating, for example whether  they are binary, categorical, or continuous. In defining the edges we identify the set of parents of any node. 

* Which nodes?

* Where are the arrows? Can you justify conditional independence claims?
    
* What restrictions? Of course restrictions are never required: rather than imposing a qualitative restriction it is possible to allow effects in all directions and let the data determine what patterns appear likely or not. It is important to note however that in general monotonicity claims cannot be inferred from data with full confidence. For instance in an $X \rightarrow Y$ model, define $\overline{y}_j = E(Y(X=j))$. Observation of $\overline{y}_0$ and  $\overline{y}_1$ is consistent with a world in which there are positive effects for share $\overline{y}_1 - \overline{y}_0$ of units and negative effects for none; or one with positive effects for $\overline{y}_1$ and negative effects for share $\overline{y}_0$ (provided $\overline{y}_1 + \overline{y}_0 <1$), or anything in between. 

* Plausible structures of unobserved confounding.  

* Priors. Beliefs about the distribution of shocks. When defined as part of the model we think of these priors as being the priors from the vantage point of someone assessing a design and they need not be the same as the priors used in the analysis. There are different approaches to generating priors. One might be to try to generate priors that reflect the state of the literature. A second might be to more formally develop priors on the basis of prior data --- that is, start with a model with uninformative priors and update the model using *past* evidence. A third approach is to gather data from target readers---for example to gather data from policy makers or disciplinary experts.


To illustrsate this process of model construction, refer back to our discussion of the inequality and democracy model in section \@ref(inequalitytheory). There we discussed a theory that unpacked a higher level model but that did not place any restrictions on functional forms --- that is, on causal types. We might imagine such restrictions being justified by theory, however. 
Drawing on @boix2003democracy, for instance, we might theorize that inequality can have a negative effect on democratization by giving the elite more to lose from majority rule, making autocrats less willing to hand over power. Inequality's positive effect, we might further posit, derives from the fact that it gives the poor more to gain from the redistribution that democratization would enable (@acemoglu2005economic). However, this positive effect can only unfold to the extent that the masses are able to mobilize, and the capacity to mobilize will hinge on ethnic homogeneity. Ethnic homogeneity thus defines the causal possibilities in regard to $I$'s effect on $D$. First, homogeneity is necessary for a positive effect of inequality. Second, by enabling mobilization around distributional demands, ethnic homogeneity rules out a net negative effect of inequality (as inequality's mobilizing effects will balance out elite fears of expropriation). Third, by making mass mobilization easier in general, ethnic homogeneity makes possible mobilization and democratization *without* inequality. Under ethnic heterogeneity, on the other hand, inequality can have a negative effect, or it can no effect at all with autocracy entrenched. 

Put differently, under ethnic homogeneity, inequality's effect can only correspond to a $b$ type or a $d$ type, while under heterogeneity the effect can only be of type $a$ or type $c$. $E$ thus allows us to partition the range of causal possibilities that model (a) had lumped together under $\theta^D$. Now we can capture this logic with a functional equation in which $\theta^D$ now takes on just two possible values (0 or 1), rather than four:

\begin{equation}
D=IE(1-\theta^D)+\theta^DE+(1-E)(1-I)\theta^D
\end{equation}

We can work through the arithmetic to observe $E$'s causal-partitioning effect. Whether $E$ is 0 or 1 determines whether we are in a world of posiitve effects ($b$ types) and democratization regardless ($d$ types), or a world of negative effects ($a$ types) and autocracy regardless ($c$ types). Note that the righthand side is a sum of three expressions. We can think of $E$ as a "switch" that turns these expressions "on" or "off." When $E=1$, the third expression goes to 0, leaving only the first two in play "on." Now, $\theta^D$ determines whether $I$ has a positive effect (when $\theta^D=0$) or no effect with $D$ fixed at $1$ (when $\theta^D=1$). Conversely, when $E=0$, the first two expressions both go to $0$, and $\theta^D$ determines whether $I$ will have a negative effect (when $\theta^D=1$) or no effect with $D$ stuck at 0 (when $\theta^D=0$).

### Choosing estimands

Estimands are causal statements

Estimands under controlled conditions, estimands under observational conditions

Estimands that depend on the cases

Sample and population level estimands
 / post stratification
 
### Selecting a data strategy

Data strategies can involve:

* how many cases to examine
* which cases to examine
* which clues to examine in which cases

Conditional strategies, dynamic strategies



```{r, echo = FALSE}
# detach(package:DeclareDesign, unload=TRUE)
```

### Answer strategy

We assume throughout that researchers draw inferences by updating on causal models as described in previous chapters. 


## Evaluating a mixed method design

The  observation that theories vary in their precision points to a method for describing the learning that is attributable to a lower-level theory relative to a higher level theory. When a lower-level theory represents a disaggregation, the lower-level theory identifies a set of potentially observable variables that are not listed by the the higher-level theory. This allows one to assess the gains in precision (for some collection of unobserved variables) that can arise from  learning the values of additional observables in the lower-level theory. 

Suppose that the contribution of a lower-level theory is to allow for inferences from new data $K$ about some set of query variables $Q$, after we have already observed variables $W$ from the higher-level model.  

### Expected loss as a evaluative metric

A useful metric to help assess the gains from a model and data strategy is the expected (squared) error resulting from posterior beliefs. Formally, define the loss function for query $Q$ given data $K$ as:

$$E_{k, q} \left(\left( \int q' P(q' | k, w)dq' - q\right)^2\right)$$
where the expectation is taken over the joint distribution of $K$ and $Q$, given $W$. This is an expected loss---or the *Bayes risk*. The inner term $P(q'|k, w)$ is the posterior distribution on $q'$ given observation of $k$ and $w$. 


Another way to think of the gains is as the expected posterior variance: how certain do you expect you will be after you make use of this new information?

In fact these two quantities are equivalent  (see for example @scharf1991statistical). 

To see this imagine a situation in which there is an unknown parameter $q$ and we have a data strategy that produces a distribution over data $k$, given $q$.

Let $p(q,k)$ denote the joint prior distribution over $q$ and  $k$ with marginal distributions $p(k)$ and $p(q)$.

For any $k$ there is posterior estimate $q_k$ and a posterior variance $v_k$, both estimated using Bayes rule.

The expected squared error is then:


$$ESE := \int_q\int_k \left({q}_k-q\right)^2p(k, q)dkdq $$

This takes the error one might get with repsect to any true value of the parameter ($q$), given the data one might see given $q$ and the inferences one might draw. 

The expected posterior variance can be written:

$$EV := \int_k v_k p(k)dk$$

This takes the posterior variance, given some data, over all the possible data one might see given marginal distribution $p(k)$.

We want to show that these are equivalent.

We take advantage of the fact that $p(q,k) = p(k)p(q|k) = p(q)p(k|q)$ and that $p(q|k)$ gives the posterior distribution of $q$ given $k$. We then have:

$$
\begin{eqnarray}
ESE &=& \int_q\int_k \left({q}_k-q\right)^2p(q,k)dkdq \\
    &=& \int_k\int_q \left({q}_k-q\right)^2p(q,k)dq dk \\
    &=& \int_k\int_q \left({q}_k-q\right)^2p(k)p(q|k)dq dk \\
    &=& \int_k\int_q \left({q}_k-q\right)^2p(q|k)dq p(k)dk \\
    &=& \int_k\left[\int_q \left({q}_k-q\right)^2p(q|k)dq\right]p(k)dk \\
    &=& \int_k v_k p(k)dk \\
    & = & EV
\end{eqnarray}
$$

Note that the key move is in recognizing that $p(q |k)$ is in fact the posterior distribution on $q$ given $k$. In using this we assume that the same distribution is used for assessing error and for conducing analysis---that is we take the researcher's prior to be the relevant one for assessing error.

### Expected variance (almost) always goes down

Moreover, it is easy to see that whenever inferences are sensitive to $K$, the expected variance of the posterior will be lower than  the variance of the prior. This can be seen from the law of total variance, written here to highlight the gains from observation of $K$, given what is already known from observation of $W$.^[See @raiffa1961applied. A similar expression can be given for the expected posterior variance from learning $K$ in addition to $W$ when $W$ is not yet known. See, for example, Proposition 3 in @geweke2014analysis.]  
$$Var(Q|W) = E_{K|W}(Var(Q|K,W)) +Var_{K|W}(E(Q|K,W))$$



### Illustration

For illustration say that it is known that $X=1, Y=1$ and that, given this information (playing the role of $W$), the posterior probability that a unit is of type $b$---for whom $Y$ would be 0 were $X=0$ (and not type $d$, for which $Y$ would be 1 regardless) is $p$. Say then that that under some theory we have $\phi_b := \Pr(K=1 | Y(0)=0, Y(1)=1, X=1)$, $\phi_d := \Pr(K=1 | Y(0)=1, Y(1)=1, X=1)$. 

Then what is the value added of this theory? Define $Q$ here as the query regarding whether the unit is a $b$ type. Then the prior variance, $Var(Q|W)$, is simply $p(1-p)^2 +(1-p)p^2 = p(1-p)$. 

<!-- Would be best to  write down the theory as a structural equation that has phi_j as p(K=1|j) -->

To calculate $E_{K|W}(Var(Q|K,W))$, note that the posterior if $K$ is observed is $\frac{\phi_bp}{\phi_bp+\phi_d(1-p)}$. Let us call this $\hat{q}_K$, and the belief when $K$ is not observed $\hat{q}_{\overline{K}}$.
In that case the  *expected error* is: 

$$\text{Expected Error} = p\phi_b\left(1-\hat{q}_K\right)^2+(1-p)\phi_d\hat{q}_K^2+p(1-\phi_b)\left(1-\hat{q}_{\overline{K}}\right)^2+(1-p)(1-\phi_d)\hat{q}_{\overline{K}}^2$$

where the four terms are the errors when $K$ is seen for a $b$ type, when $K$ is seen for a $d$ type, when $K$ is not seen for a $b$ type, and when $K$ is not see for a $d$ type.


Defining $\rho_K = (p\phi_b+(1-p)\phi_d)$ as the probability of observing $K$ given the prior, we can write the posterior variance as:

$$\text{Expected Posterior Variance} = \rho_K\hat{q}_K(1-\hat{q}_K)+(1-\rho_K)\hat{q}_{\overline{K}}(1-\hat{q}_{\overline{K}})$$


<!-- Making use of the fact that $\rho_K\hat{q}_K = ({\phi_bp+\phi_d(1-p)})\frac{\phi_bp}{\phi_bp+\phi_d(1-p)} = \phi_bp$ and similarly  -->
<!-- $(1-\rho_K)\hat{q}_{\overline{K}} = (1-\phi_b)p$, this can be written in terms of primitives as: -->

With a little manipulation, both of these expressions simplify to:

$$\text{Expected Posterior Variance} =p(1-p)\left(\frac{\phi_b\phi_d}{\phi_bp+\phi_d(1-p)} + \frac{(1-\phi_b)(1-\phi_d)}{(1-\phi_b)p+(1-\phi_d)(1-p)}\right)$$

The gains are then:

$$\text{Gains} =1- \frac{\phi_b\phi_d}{\phi_bp+\phi_d(1-p)} - \frac{(1-\phi_b)(1-\phi_d)}{(1-\phi_b)p+(1-\phi_d)(1-p)}$$

Note that we gain wisdom even if our posterior variance increases. For example say $p = 1/5$, $\phi_d = 1/3$, $\phi_b = 2/3$ and we observe $K=1$. Then our prior variace is $p(1-p) = 4/15$. Our posterior is $1/3$ and our posterior variance is 2/9, an increase. Even still although we are more uncertain we are wiser since we attribute a squared error to the guesses made by our former selves now of $(1/3)(1-1/5)^2 + (2/3)(0 - 1/5)^2 = 6/25$.

<!-- .2 2/3 / .2 2/3 + .8 1/3 ) = .4/ .4 + .8    -->

### In code

Let us consider the same question using a particular model and calculate these quantities given this model.

```{r, message = FALSE}
model <- make_model("X -> Y <- K") %>%
         set_parameters(c(
           .5, .5, 
           .5, .5, 
            1,0,0,0, 0,4,0,0, 2,0,0,0, 0,0,1,2))
# model$parameters
```

The probability that $K=1$ given $X=Y=1$ is:

```{r}
query_model(model, 
            queries = list(phi_b = "K==1", phi_d = "K==1"),
            using = "parameters", 
            subset = list("X==1 & Y==1 & (Y[X=0]==0)", "X==1 & Y==1 & (Y[X=0]==1)")) %>%
            kable
```

The inferences conditional on the observation of $K$ are:

```{r}
query_model(
      model, 
      queries = "Y[X=1]>Y[X=0]",
      using = "parameters", 
      subsets = list("X==1 & Y==1", 
                     "X==1 & Y==1 & K==1", 
                     "X==1 & Y==1 & K==0")) %>%
      kable
```


### Other loss functions

Other loss functions could be used, including functions that take account of the costs of collecting additional data,^[Further, one might call into question the value of a theory if the gains in precision depend upon data that are practically impossible to gather.] or to the risks associated with false diagnoses.^[For instance, in @heckerman1991toward, an objective function is generated using  expected utility gains from diagnoses generated based on new information over diagnoses based on what is believed already. In their treatment [@heckerman1991toward, Equation 6],  the expected value of new information $K$, given existing information $W$ is: $\sum{K}P(K|W)( EU(d(Q,W,K)|W, K) - EU(d(Q, W)|W, K))$ where $EU$ is expected utility and $d$ is the optimal inference (diagnosis) given available data. Note that the diagnosis can take account of $K$ when it is observed, but the expected utility depends on $K$ whether or not it is observed, as $K$ carries information about the state of interest.] 




## Illustration of Design Decaration in code

In the `gbiqq` package there is a single function that lets you declare a full design in one go by letting you supply arguments to declare a model, an inquiry, a data strategy, and an answer strategy

```{r, include = FALSE}
library(DeclareDesign)
library(gbiqq)
```

```{r ch10designer, message = FALSE, warning = FALSE, eval = FALSE}
# A single function can be used to declare a model, an inquiry, a data strategy, and an answer strategy

library(DeclareDesign)

my_design <- gbiqq_designer(
   reference_model = make_model("X -> Y") %>%
     set_parameters(c(.5, .5, .1, .1, .7, .1)),  # Truth
   analysis_model = make_model("X -> Y"),  # Prior model
   n = 100,
   query = list(ATE = "Y[X=1] - Y[X=0]"),
   given = "X==1 & Y==1")

```


With this model in hand you can use it to draw likely data, run analyses, and run diagnostics. 

Sample data can be generated with the `DeclareDesign` function `draw_data`:

```{r, echo = FALSE}
draw_data(my_design) %>% collapse_data(make_model("X -> Y")) %>% kable(caption = "Sample Data (shown in compact form)")
```

```{r, echo = FALSE}
draw_estimands(my_design)  %>%  head %>% kable(caption = "Sample Estimands")
```

```{r, echo = FALSE}
draw_estimates(my_design)  %>%  head %>% kable(caption = "Sample Estimates")
```

Diagnosis is then implemented using `diagnose_design`.  The function `diagnose_design` simulates the design many times and in each simulation gathers the estimand as well as the estimate and other statistics, and uses these to generate diagnosands -- such as mean squared error or expected posterior variance. 

```{r, echo = FALSE}
if(do_diagnosis){
  diag <- diagnose_design(my_design, sims = 10)
  write_rds(diag, "saved/Ch10_diagnosis.rds")
}

diag <- read_rds("saved/Ch10_diagnosis.rds")
kable(reshape_diagnosis(diag))

```


